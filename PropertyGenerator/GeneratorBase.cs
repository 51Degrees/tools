using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PropertyGenerator
{
    /// <summary>
    /// Base class for generator implementation containing common code.
    /// </summary>
    public abstract class GeneratorBase : IGenerator
    {
        public abstract void BuildCSharp(string path);
        public abstract void BuildJava(string path);

        /// <summary>
        /// Gets the copyright text + the auto-generation message
        /// </summary>
        protected static string GetCopyright()
        {
            string copyright = ReadCopyright();
            copyright +=
@"

/* *********************************************************************
 * This code is auto generated by 51Degrees using the most up to data
 * at the time of release, and should not be changed directly.
 * **********************************************************************/
";
            return copyright;
        }

        /// <summary>
        /// Reads the text from the text file located in the project's folder and returns a string 
        /// </summary>
        /// <returns></returns>
        protected static string ReadCopyright()
        {
            try
            {
                var path = Path.Combine(AppContext.BaseDirectory, "Copyright.txt");
                using (var reader = new StreamReader(path))
                {
                    return reader.ReadToEnd();
                }
            }
            catch (IOException e)
            {
                Console.WriteLine("The file could not be read:");
                Console.WriteLine(e.Message);
                return null;
            }
        }
    }
}
